name: go-stash

on:
  push:
    branches:
      - main

env:
  GO_VERSION: "1.19"
  LINTER_VERSION: "v1.51.2"

jobs:
  environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Get version
        run: |
          version=`cat /home/runner/work/go-stash/go-stash/version.json | jq '.Version' | sed 's/"//g'`
          echo $version
          echo "version=$version" >> $GITHUB_ENV
      - name: Generate build artifacts
        run: |
          mkdir -p /tmp
          echo ${{ env.version }} >> /tmp/version
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            /tmp/version

  go_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.LINTER_VERSION }}
          working-directory: .
          args: --verbose

  go_test:
    needs: [go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test Stash
        working-directory: /home/runner/work/go-stash/go-stash
        run: |
          make dep
          go mod download
          go test -v -cover ./... -coverprofile /tmp/go-stash.out | tee /tmp/go-stash.log; test ${PIPESTATUS[0]} -eq 0
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            /tmp/go-stash.log
            /tmp/go-stash.out

  git_push_tag:
    runs-on: ubuntu-latest
    needs: [go_test, environment]
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: /tmp
      - name: Get environment
        run: |
          version=`cat /tmp/version`
          echo "version=$version" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Push/Update version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          CUSTOM_TAG: v${{ env.version }}
