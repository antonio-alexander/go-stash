name: go-stash_pull_request

on:
  pull_request:
    branches:
      - main

env:
  GO_VERSION: "1.19"
  LINTER_VERSION: "v1.51.2"

jobs:
  environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Get version
        run: |
          version=`cat /home/runner/work/go-stash/go-stash/version.json | jq '.Version' | sed 's/"//g'`
          echo $version
          echo "version=$version" >> $GITHUB_ENV
      - name: Generate build artifacts
        run: |
          mkdir -p /tmp
          echo ${{ env.version }} >> /tmp/version
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            /tmp/version

  version_validate:
    needs: [environment]
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: /tmp
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Validate Version Updated
        working-directory: /home/runner/work/go-stash/go-stash
        run: |
          echo "checking to see if version.json updated"
          git fetch origin main:refs/remotes/origin/main
          git_diff_output=`git diff origin/main --name-only | grep version.json`
          if [ "$git_diff_output" != "version.json" ]; then
               echo "version.json has not been updated, version.json must be updated for a pull request"
          fi
      - name: Validate Changelog Updated
        working-directory: /home/runner/work/go-stash/go-stash
        run: |
          echo "checking to see if CHANGELOG.md updated"
          git fetch origin main:refs/remotes/origin/main
          git_diff_output=`git diff origin/main --name-only | grep CHANGELOG.md`
          if [ "$git_diff_output" != "CHANGELOG.md" ]; then
               echo "CHANGELOG.md has not been updated, CHANGELOG.md must be updated for a pull request"
          fi
      - name: Validate Version
        working-directory: /home/runner/work/go-stash/go-stash
        run: |
          git fetch --tags
          echo checking for tag v$version
          tag=`git tag --list v$version`
          if [ -z "$tag" ]
          then
                echo "tag v$version doesn't exist"
          else
                echo "tag v$version exists"
                exit 1
          fi

  go_lint:
    needs: [version_validate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.LINTER_VERSION }}
          working-directory: .
          args: --verbose

  go_test:
    needs: [go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test Stash
        working-directory: /home/runner/work/go-stash/go-stash
        run: |
          go mod download
          go test -v -cover ./... -coverprofile /tmp/go-stash.out | tee /tmp/go-stash.log; test ${PIPESTATUS[0]} -eq 0
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            /tmp/go-stash.log
            /tmp/go-stash.out
